import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as a,d as n}from"./app-KtaEACfe.js";const i="/assets/architecture-DQ7ucCm8.png",o="/assets/code-Bg-8ayO-.jpg",r={},p=n('<h2 id="项目介绍" tabindex="-1"><a class="header-anchor" href="#项目介绍"><span>项目介绍</span></a></h2><h3 id="项目架构图" tabindex="-1"><a class="header-anchor" href="#项目架构图"><span>项目架构图</span></a></h3><figure><img src="'+i+'" alt="项目架构图" tabindex="0" loading="lazy"><figcaption>项目架构图</figcaption></figure><h3 id="代码目录" tabindex="-1"><a class="header-anchor" href="#代码目录"><span>代码目录</span></a></h3><figure><img src="'+o+'" alt="代码目录" tabindex="0" loading="lazy"><figcaption>代码目录</figcaption></figure><h3 id="详细介绍" tabindex="-1"><a class="header-anchor" href="#详细介绍"><span>详细介绍</span></a></h3><h4 id="整体" tabindex="-1"><a class="header-anchor" href="#整体"><span>整体</span></a></h4><p>opentp 分为服务端和客户端。</p><h4 id="客户端" tabindex="-1"><a class="header-anchor" href="#客户端"><span>客户端</span></a></h4><ol><li>客户端提供了 opentp-client-spring-boot-starter 供 Springboot 项目引用，如果是其他 Java 项目可以直接引用 opentp-client 项目</li><li>客户端代码非常简单，只是启动了一个线程监控线程池，然后收集线程池的状态，进行上报到服务端，如果服务端异常或者停机等，客户端将自动停报，并隔一段时间尝试重连服务端，对整个业务 0 影响。</li><li>客户端需配置 appId 和 appKey， 可以通过 opentp 服务端申请。</li></ol><h4 id="服务端" tabindex="-1"><a class="header-anchor" href="#服务端"><span>服务端</span></a></h4><ol><li>服务端可集群部署可单机部署</li><li>服务端提供了基于 netty 实现的 rest 接口，供查询线程池状态和进行线程池参数修改。</li><li>基于 zab 协议来保证客户端链接整个集群一致性。</li><li>服务器提供报文上报权限控制，首次链接需要携带 appId 和 appKey 进行权限验证，通过后会返回 licenseKey，licenseKey 有一定的有效时间，客户端会定期申请 licenseKey，业务使用方无感知。</li><li>后续客户端上报线程池信息需要携带 licenseKey。</li><li>服务端提供用户权限控制，用户分为管理员和普通用户，管理员只是用来管理用户，普通用户仅可看到自己负责的 appId 的线程池信息。</li><li>服务端用户可以同时拥有管理员和普通用户权限（即管理员也是普通用户）。</li></ol>',12),l=[p];function c(s,d){return t(),a("div",null,l)}const m=e(r,[["render",c],["__file","index.html.vue"]]),u=JSON.parse('{"path":"/quickstart/","title":"快速上手","lang":"zh-CN","frontmatter":{"title":"快速上手","icon":"lightbulb","index":false,"dir":{"order":1},"description":"项目介绍 项目架构图 项目架构图项目架构图 代码目录 代码目录代码目录 详细介绍 整体 opentp 分为服务端和客户端。 客户端 客户端提供了 opentp-client-spring-boot-starter 供 Springboot 项目引用，如果是其他 Java 项目可以直接引用 opentp-client 项目 客户端代码非常简单，只是启动了...","head":[["meta",{"property":"og:url","content":"https://opentp.cn/quickstart/"}],["meta",{"property":"og:site_name","content":"opentp"}],["meta",{"property":"og:title","content":"快速上手"}],["meta",{"property":"og:description","content":"项目介绍 项目架构图 项目架构图项目架构图 代码目录 代码目录代码目录 详细介绍 整体 opentp 分为服务端和客户端。 客户端 客户端提供了 opentp-client-spring-boot-starter 供 Springboot 项目引用，如果是其他 Java 项目可以直接引用 opentp-client 项目 客户端代码非常简单，只是启动了..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T05:59:53.000Z"}],["meta",{"property":"article:author","content":"zhanggong"}],["meta",{"property":"article:modified_time","content":"2024-04-12T05:59:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"快速上手\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T05:59:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"zhanggong\\",\\"url\\":\\"opentp.cn\\"}]}"]]},"headers":[{"level":2,"title":"项目介绍","slug":"项目介绍","link":"#项目介绍","children":[{"level":3,"title":"项目架构图","slug":"项目架构图","link":"#项目架构图","children":[]},{"level":3,"title":"代码目录","slug":"代码目录","link":"#代码目录","children":[]},{"level":3,"title":"详细介绍","slug":"详细介绍","link":"#详细介绍","children":[]}]}],"git":{"createdTime":1712901593000,"updatedTime":1712901593000,"contributors":[{"name":"zhanggong","email":"zhanggong@58.com","commits":1}]},"readingTime":{"minutes":1.45,"words":435},"filePathRelative":"quickstart/README.md","localizedDate":"2024年4月12日","autoDesc":true}');export{m as comp,u as data};
