import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as t,d as a}from"./app-C83zSR47.js";const o={},l=a('<h3 id="netty-核心组件" tabindex="-1"><a class="header-anchor" href="#netty-核心组件"><span>Netty 核心组件</span></a></h3><ul><li>ServerBootstrap 服务端启动类</li><li>Bootstrap 客户端启动类</li><li>EventLoopGroup 事件循环组</li><li>EventLoop 事件循环</li><li>Channel</li><li>ChannelPipeline</li><li>ChannelHandler</li><li>ChannelHandlerContext</li><li>ByteBuf</li></ul><h3 id="serverbootstrap" tabindex="-1"><a class="header-anchor" href="#serverbootstrap"><span>ServerBootstrap</span></a></h3><p>用来启动服务器期，都是模板。。</p><h3 id="bootstrap" tabindex="-1"><a class="header-anchor" href="#bootstrap"><span>Bootstrap</span></a></h3><p>用来启动客户端，也是模板</p><h3 id="eventloopgroup" tabindex="-1"><a class="header-anchor" href="#eventloopgroup"><span>EventLoopGroup</span></a></h3><p>类似于线程池，服务端可以创建两个，</p><ol><li>一个 bossGroup 专门用来监听端口，监听新链接的到来，它关联一个 ServerChannel；</li><li>一个 workerGroup 专门用来处理已建立链接的 channel。</li></ol><h3 id="eventloop" tabindex="-1"><a class="header-anchor" href="#eventloop"><span>EventLoop</span></a></h3><p>EventLoop 定义了 Netty 的核心抽象，用于处理连接的生命周期中所发生的事件。<br> 一个 EventLoopGroup 包含多个 EventLoop, 一个 EventLoop 对应一个线程。<br> 当新来一个连接的时候,workerGroup 创建一个 Channel 然后将 Channle 注册到 EventLoopGroup 中的某个 EventLoop 上。<br> 然后这个连接的整个生命周期中的所有事件,都有该 EventLoop 处理,也就是在该 EventLoop 绑定的 Thread 中处理。</p><blockquote><p>也就是说一个 Channel 注册到一个 EventLoop, 一个 EventLoop 会被分配给一个或者多个 Channel。</p></blockquote><h3 id="channel-channelpipeline-channelhandler-channelhandercontext-关系" tabindex="-1"><a class="header-anchor" href="#channel-channelpipeline-channelhandler-channelhandercontext-关系"><span>Channel&amp;ChannelPipeline&amp;ChannelHandler&amp;ChannelHanderContext 关系</span></a></h3><p>一个连接对应一个 Channel。<br> 一个 Channel 对应一个 ChannelPipeline。<br> 一个 ChannelPipeline 对应多个 ChannelHandler 包含部分 InboundHandler 和 部分 OutBoundHandler。<br> 一个 ChannelHandlerContext 对应一个 ChannelHandler。<br> 也就是说一个 ChannelPipline 内是一个双向链表, 链表内的内容是 ChannelHandlerContext, 该 Context 包含一个 ChannelHandler,并且表示该 Handler 是 Inbound 还是 Outbound。</p><blockquote><p>其实 ChannelhandlerContext 就是链表中 Node 的角色。</p></blockquote><h3 id="channel-write-channelhanldercontext-write" tabindex="-1"><a class="header-anchor" href="#channel-write-channelhanldercontext-write"><span>Channel.write&amp;ChannelHanlderContext.write</span></a></h3><p>建议使用 Channel.write，它会让消息从最后一个 outbound 处理器往头部处理。<br> ctx.write 则是从该 handler 开始往前找 outbound 处理，也就是说 channelPipeline 中该 handler 后的 outbound 将不会处理该消息。</p>',17),r=[l];function p(h,i){return n(),t("div",null,r)}const s=e(o,[["render",p],["__file","netty.html.vue"]]),u=JSON.parse('{"path":"/blog/frame/netty.html","title":"Netty","lang":"zh-CN","frontmatter":{"title":"Netty","category":["常用框架"],"order":1,"tag":["frame","netty"],"description":"Netty 核心组件 ServerBootstrap 服务端启动类 Bootstrap 客户端启动类 EventLoopGroup 事件循环组 EventLoop 事件循环 Channel ChannelPipeline ChannelHandler ChannelHandlerContext ByteBuf ServerBootstrap 用来启动服...","head":[["meta",{"property":"og:url","content":"https://opentp.cn/blog/frame/netty.html"}],["meta",{"property":"og:site_name","content":"opentp"}],["meta",{"property":"og:title","content":"Netty"}],["meta",{"property":"og:description","content":"Netty 核心组件 ServerBootstrap 服务端启动类 Bootstrap 客户端启动类 EventLoopGroup 事件循环组 EventLoop 事件循环 Channel ChannelPipeline ChannelHandler ChannelHandlerContext ByteBuf ServerBootstrap 用来启动服..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-14T11:28:49.000Z"}],["meta",{"property":"article:author","content":"zhanggong"}],["meta",{"property":"article:tag","content":"frame"}],["meta",{"property":"article:tag","content":"netty"}],["meta",{"property":"article:modified_time","content":"2024-04-14T11:28:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Netty\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-14T11:28:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"zhanggong\\",\\"url\\":\\"opentp.cn\\"}]}"]]},"headers":[{"level":3,"title":"Netty 核心组件","slug":"netty-核心组件","link":"#netty-核心组件","children":[]},{"level":3,"title":"ServerBootstrap","slug":"serverbootstrap","link":"#serverbootstrap","children":[]},{"level":3,"title":"Bootstrap","slug":"bootstrap","link":"#bootstrap","children":[]},{"level":3,"title":"EventLoopGroup","slug":"eventloopgroup","link":"#eventloopgroup","children":[]},{"level":3,"title":"EventLoop","slug":"eventloop","link":"#eventloop","children":[]},{"level":3,"title":"Channel&ChannelPipeline&ChannelHandler&ChannelHanderContext 关系","slug":"channel-channelpipeline-channelhandler-channelhandercontext-关系","link":"#channel-channelpipeline-channelhandler-channelhandercontext-关系","children":[]},{"level":3,"title":"Channel.write&ChannelHanlderContext.write","slug":"channel-write-channelhanldercontext-write","link":"#channel-write-channelhanldercontext-write","children":[]}],"git":{"createdTime":1713094129000,"updatedTime":1713094129000,"contributors":[{"name":"zhanggong","email":"18523019@qq.com","commits":1}]},"readingTime":{"minutes":1.44,"words":433},"filePathRelative":"blog/frame/netty.md","localizedDate":"2024年4月14日","autoDesc":true}');export{s as comp,u as data};
