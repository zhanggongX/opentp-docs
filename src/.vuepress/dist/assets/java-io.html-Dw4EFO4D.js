import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as t,f as o}from"./app-RnYB9dwR.js";const l={},r=o('<h2 id="java-io" tabindex="-1"><a class="header-anchor" href="#java-io"><span>Java IO</span></a></h2><h3 id="常见的io模型" tabindex="-1"><a class="header-anchor" href="#常见的io模型"><span>常见的IO模型</span></a></h3><p>同步IO，同步非阻塞IO，IO多路复用，事件驱动IO，异步IO</p><h4 id="java中常见的io模型" tabindex="-1"><a class="header-anchor" href="#java中常见的io模型"><span>JAVA中常见的IO模型</span></a></h4><p>BIO，Socket/ServerSocket<br> NIO（IO多路复用基于NIO） 三大核心组件 Channel，Selector，Buffer<br> AIO</p><h3 id="io多路复用和同步非阻塞io的区别" tabindex="-1"><a class="header-anchor" href="#io多路复用和同步非阻塞io的区别"><span>IO多路复用和同步非阻塞IO的区别</span></a></h3><p>同步非阻塞IO模型，应用程序会一直发起 Read 调用，只不过读不到数据不会阻塞程序（当数据从内核态到用户态的过程中，仍然是阻塞的）。<br> IO 多路复用会先发起 Select 调用，只有当内核数据准备好后才会发起 Read 调用（当数据从内核态到用户态的过程中，仍然是阻塞的）。<br> 区别就是一个是轮循所有的 IO，一个是只发起内核的 Select / epoll 调用</p><blockquote><p>Ps：几乎所有的内核都支持 select , 而 epoll 是 select 的增强版本，linux2.6内核后才有，增强了IO效率。</p></blockquote><h3 id="selector、poll、epoll-的区别" tabindex="-1"><a class="header-anchor" href="#selector、poll、epoll-的区别"><span>Selector、Poll、Epoll 的区别</span></a></h3><p>selector 和 poll 都是通过轮询监听的端口取到读写事件然后去处理 他们俩的区别就是 selector 底层是数组实现的，有个数限制即 1024 个，poll 底层是链表实现的，没有个数限制 epoll 则是事件驱动的，底层是红黑树，也没有链接个数限制。 epoll 三个 linux 函数，分别是 epoll_create 创建epoll 监听， epoll_ctl 加入到监听， epoll_wait 等待链接、读、写事件。</p><h3 id="nio的三大组件" tabindex="-1"><a class="header-anchor" href="#nio的三大组件"><span>NIO的三大组件</span></a></h3><p>Selector<br> 基于事件驱动的I/O多路复用模型<br> Selector 监控注册到其的 Channel，然后监听 Channel 的事件<br> 比如接受链接，发起链接，读，写</p><p>Buffer<br> jdk提供了各种buffer, intbuffer, bytebuffer 等等<br> 它的核心成员 capacity, limit, position, mark<br> 它的核心方法 flip(切换读模式) get put clean（切换写模式）</p><p>Channel<br> channel 是和文件打交道的，网络套接字也是文件<br> read 将数据读取到 buffer<br> write 将buffer数据写入channel</p><h3 id="零拷贝" tabindex="-1"><a class="header-anchor" href="#零拷贝"><span>零拷贝</span></a></h3><p>NIO 的零拷贝，<br> MappedByteBuffer 的零拷贝，基于 mmap，<br> FileChanel 的 transferTo/transferFroom 基于 sendFile。</p>',16),n=[r];function i(p,c){return a(),t("div",null,n)}const I=e(l,[["render",i],["__file","java-io.html.vue"]]),O=JSON.parse('{"path":"/blog/java/java-io.html","title":"Java IO","lang":"zh-CN","frontmatter":{"title":"Java IO","category":["Java"],"order":3,"tag":["Java基础","Java-IO"],"description":"Java IO 常见的IO模型 同步IO，同步非阻塞IO，IO多路复用，事件驱动IO，异步IO JAVA中常见的IO模型 BIO，Socket/ServerSocket NIO（IO多路复用基于NIO） 三大核心组件 Channel，Selector，Buffer AIO IO多路复用和同步非阻塞IO的区别 同步非阻塞IO模型，应用程序会一直发起 Re...","head":[["meta",{"property":"og:url","content":"https://opentp.cn/blog/java/java-io.html"}],["meta",{"property":"og:site_name","content":"opentp"}],["meta",{"property":"og:title","content":"Java IO"}],["meta",{"property":"og:description","content":"Java IO 常见的IO模型 同步IO，同步非阻塞IO，IO多路复用，事件驱动IO，异步IO JAVA中常见的IO模型 BIO，Socket/ServerSocket NIO（IO多路复用基于NIO） 三大核心组件 Channel，Selector，Buffer AIO IO多路复用和同步非阻塞IO的区别 同步非阻塞IO模型，应用程序会一直发起 Re..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-09T07:29:43.000Z"}],["meta",{"property":"article:author","content":"zhanggong"}],["meta",{"property":"article:tag","content":"Java基础"}],["meta",{"property":"article:tag","content":"Java-IO"}],["meta",{"property":"article:modified_time","content":"2024-04-09T07:29:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java IO\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-09T07:29:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"zhanggong\\",\\"url\\":\\"opentp.cn\\"}]}"]]},"headers":[{"level":2,"title":"Java IO","slug":"java-io","link":"#java-io","children":[{"level":3,"title":"常见的IO模型","slug":"常见的io模型","link":"#常见的io模型","children":[]},{"level":3,"title":"IO多路复用和同步非阻塞IO的区别","slug":"io多路复用和同步非阻塞io的区别","link":"#io多路复用和同步非阻塞io的区别","children":[]},{"level":3,"title":"Selector、Poll、Epoll 的区别","slug":"selector、poll、epoll-的区别","link":"#selector、poll、epoll-的区别","children":[]},{"level":3,"title":"NIO的三大组件","slug":"nio的三大组件","link":"#nio的三大组件","children":[]},{"level":3,"title":"零拷贝","slug":"零拷贝","link":"#零拷贝","children":[]}]}],"git":{"createdTime":1712492823000,"updatedTime":1712647783000,"contributors":[{"name":"zhanggong","email":"zhanggong@58.com","commits":2}]},"readingTime":{"minutes":1.75,"words":526},"filePathRelative":"blog/java/java-io.md","localizedDate":"2024年4月7日","autoDesc":true}');export{I as comp,O as data};
