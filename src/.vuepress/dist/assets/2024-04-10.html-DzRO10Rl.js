import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,e as t}from"./app-DrM8QV3P.js";const e={},o=t(`<p>给你一个二进制字符串 binary ，它仅有 0 或者 1 组成。你可以使用下面的操作任意次对它进行修改：</p><p>操作 1 ：如果二进制串包含子字符串 &quot;00&quot; ，你可以用 &quot;10&quot; 将其替换。<br> 比方说， &quot;00010&quot; -&gt; &quot;10010&quot;</p><p>操作 2 ：如果二进制串包含子字符串 &quot;10&quot; ，你可以用 &quot;01&quot; 将其替换。<br> 比方说， &quot;00010&quot; -&gt; &quot;00001&quot;</p><p>请你返回执行上述操作任意次以后能得到的 最大二进制字符串 。如果二进制字符串 x 对应的十进制数字大于二进制字符串 y 对应的十进制数字，那么我们称二进制字符串 x 大于二进制字符串 y 。</p><h3 id="题解" tabindex="-1"><a class="header-anchor" href="#题解"><span>题解</span></a></h3><p>答案肯定只有一个0，如果有多个0，可以通过一系列 10 -&gt; 01 操作可以让多个 0 到一块，然后可以通过 00 -&gt; 10 得到的数肯定比之前的大。<br> 而且 0 只能左移，不能右移</p><p>设字符串长度为 len，<br> 我们先找到第一个 0 设它的索引位置为 i，然后统计字符串索引 (i, len] 中的 1 的个数记为 count1。<br> 根据规律，最终这 count1 个 1 都会到字符串的末尾，那么最终的字符串，<br> 就是 len - 1 - count1 个 1 + 一个 0 + count1 个 1。</p><blockquote><p>比如 101010，第一个 0 位置为 1，统计后续有 2 个 1，<br> 最终结果是 101010 -&gt; 100011 -&gt; 11011 即 6-1-2(2) 个 1 + 一个 0 + 两个 1。<br> 还比如 11110 这种情况，第一个 0 的位置就在最后了，统计到的 1 个数为 0，<br> 所以答案是 4 个 1 + 一个 0，和原字符串一致。</p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">maximumBinaryString</span><span class="token punctuation">(</span><span class="token class-name">String</span> binary<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> binary<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token char">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 如果字符串全是 1，直接返回。</span>
            <span class="token keyword">return</span> binary<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> s <span class="token operator">=</span> binary<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> count1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        <span class="token comment">// 从第一个 0 的位置往后遍历</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            count1 <span class="token operator">+=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">;</span> 
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> count1<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token char">&#39;0&#39;</span> <span class="token operator">+</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span>count1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),p=[o];function c(i,l){return a(),s("div",null,p)}const k=n(e,[["render",c],["__file","2024-04-10.html.vue"]]),d=JSON.parse('{"path":"/blog/algorithm/daily/2024-04-10.html","title":"240410-1702修改后的最大二进制字符串","lang":"zh-CN","frontmatter":{"title":"240410-1702修改后的最大二进制字符串","category":["leetcode"],"order":3,"tag":["贪心","字符串"],"description":"给你一个二进制字符串 binary ，它仅有 0 或者 1 组成。你可以使用下面的操作任意次对它进行修改： 操作 1 ：如果二进制串包含子字符串 \\"00\\" ，你可以用 \\"10\\" 将其替换。 比方说， \\"00010\\" -> \\"10010\\" 操作 2 ：如果二进制串包含子字符串 \\"10\\" ，你可以用 \\"01\\" 将其替换。 比方说， \\"00010\\" -> \\"...","head":[["meta",{"property":"og:url","content":"https://opentp.cn/blog/algorithm/daily/2024-04-10.html"}],["meta",{"property":"og:site_name","content":"opentp"}],["meta",{"property":"og:title","content":"240410-1702修改后的最大二进制字符串"}],["meta",{"property":"og:description","content":"给你一个二进制字符串 binary ，它仅有 0 或者 1 组成。你可以使用下面的操作任意次对它进行修改： 操作 1 ：如果二进制串包含子字符串 \\"00\\" ，你可以用 \\"10\\" 将其替换。 比方说， \\"00010\\" -> \\"10010\\" 操作 2 ：如果二进制串包含子字符串 \\"10\\" ，你可以用 \\"01\\" 将其替换。 比方说， \\"00010\\" -> \\"..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-11T07:30:41.000Z"}],["meta",{"property":"article:author","content":"zhanggong"}],["meta",{"property":"article:tag","content":"贪心"}],["meta",{"property":"article:tag","content":"字符串"}],["meta",{"property":"article:modified_time","content":"2024-04-11T07:30:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"240410-1702修改后的最大二进制字符串\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-11T07:30:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"zhanggong\\",\\"url\\":\\"opentp.cn\\"}]}"]]},"headers":[{"level":3,"title":"题解","slug":"题解","link":"#题解","children":[]}],"git":{"createdTime":1712749634000,"updatedTime":1712820641000,"contributors":[{"name":"zhanggong","email":"zhanggong@58.com","commits":2}]},"readingTime":{"minutes":1.72,"words":516},"filePathRelative":"blog/algorithm/daily/2024-04-10.md","localizedDate":"2024年4月10日","autoDesc":true}');export{k as comp,d as data};
