import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e}from"./app-B868GSZd.js";const t={},p=e(`<h3 id="代理模式概述" tabindex="-1"><a class="header-anchor" href="#代理模式概述"><span>代理模式概述</span></a></h3><p>代理模式(Proxy)，为其他对象提供一种代理以控制对这个对象的访问。<br> 代理模式对象实现被代理对象的接口，然后持用被代理对象的引用，调用代理的方法去实际调用被代理的方法，同时可以做一些增强。</p><blockquote><p>静态代理和动态代理。</p></blockquote><h3 id="代码" tabindex="-1"><a class="header-anchor" href="#代码"><span>代码</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Inter</span> <span class="token punctuation">{</span>
   <span class="token keyword">void</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RealBean</span> <span class="token keyword">implements</span> <span class="token class-name">Inter</span> <span class="token punctuation">{</span>
 
   <span class="token annotation punctuation">@Override</span>
   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;real bean&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProxyBean</span> <span class="token keyword">implements</span> <span class="token class-name">Inter</span><span class="token punctuation">{</span>
 
   <span class="token keyword">private</span> <span class="token class-name">RealBean</span> realBean<span class="token punctuation">;</span>
 
   <span class="token annotation punctuation">@Override</span>
   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>realBean <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
         realBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RealBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// 增强</span>
      realBean<span class="token punctuation">.</span><span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// 增强</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),o=[p];function c(l,i){return s(),a("div",null,o)}const d=n(t,[["render",c],["__file","4-proxy.html.vue"]]),k=JSON.parse('{"path":"/blog/compute/design-pattern/structure/4-proxy.html","title":"代理模式","lang":"zh-CN","frontmatter":{"title":"代理模式","category":["设计模式"],"order":4,"tag":["代理模式","结构型设计模式"],"description":"代理模式概述 代理模式(Proxy)，为其他对象提供一种代理以控制对这个对象的访问。 代理模式对象实现被代理对象的接口，然后持用被代理对象的引用，调用代理的方法去实际调用被代理的方法，同时可以做一些增强。 静态代理和动态代理。 代码","head":[["meta",{"property":"og:url","content":"https://opentp.cn/blog/compute/design-pattern/structure/4-proxy.html"}],["meta",{"property":"og:site_name","content":"opentp"}],["meta",{"property":"og:title","content":"代理模式"}],["meta",{"property":"og:description","content":"代理模式概述 代理模式(Proxy)，为其他对象提供一种代理以控制对这个对象的访问。 代理模式对象实现被代理对象的接口，然后持用被代理对象的引用，调用代理的方法去实际调用被代理的方法，同时可以做一些增强。 静态代理和动态代理。 代码"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"zhanggong"}],["meta",{"property":"article:tag","content":"代理模式"}],["meta",{"property":"article:tag","content":"结构型设计模式"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"代理模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"zhanggong\\",\\"url\\":\\"opentp.cn\\"}]}"]]},"headers":[{"level":3,"title":"代理模式概述","slug":"代理模式概述","link":"#代理模式概述","children":[]},{"level":3,"title":"代码","slug":"代码","link":"#代码","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.55,"words":166},"filePathRelative":"blog/compute/design-pattern/structure/4-proxy.md","autoDesc":true}');export{d as comp,k as data};
