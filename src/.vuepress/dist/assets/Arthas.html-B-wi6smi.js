import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as d,e as a}from"./app-BPft6X5f.js";const r={},n=a(`<h2 id="arthas" tabindex="-1"><a class="header-anchor" href="#arthas"><span>arthas</span></a></h2><p>arthas 最有用的就是</p><ol><li>bashboard 查看系统情况</li><li>trace 查看接口耗时情况</li><li>orgnl &amp; vmtool 线上执行方法调查线上问题。</li></ol><h3 id="dashboard-实时数据面板" tabindex="-1"><a class="header-anchor" href="#dashboard-实时数据面板"><span>dashboard 实时数据面板</span></a></h3><h4 id="查询gc等情况" tabindex="-1"><a class="header-anchor" href="#查询gc等情况"><span>查询GC等情况</span></a></h4><ol><li>ID java 级别的线程ID，跟jstack中的nativeID不是对应的</li><li>NAME 线程名</li><li>GROUP 线程组名</li><li>PRIORITY 优先级 越大优先级越高</li><li>STATE 线程状态 RUNABLE|WATING|TIMED_WATING|NEW|TEIMAL</li><li>CPU 线程cpu使用率 （某个线程的增量CPU时间/采样间隔时间）</li><li>DELTA_TIME 上次采样后线程运行增量CPU时间，格式为秒</li><li>TIME 线程运行总cpu时间 格式为 分：秒</li><li>INTERRUPTED 线程当前的中断位状态</li><li>DAEMON 是否是daemon线程</li></ol><h4 id="内存区域" tabindex="-1"><a class="header-anchor" href="#内存区域"><span>内存区域</span></a></h4><ol><li>Memory 各个区</li><li>used 使用情况</li><li>total</li><li>max 最大</li><li>GC gc类型、次数、时长</li></ol><p>Runtime 区域 运行环境</p><h3 id="thread-查看线程使用情况" tabindex="-1"><a class="header-anchor" href="#thread-查看线程使用情况"><span>thread 查看线程使用情况</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>thread -n 3 显示最忙的3个线程
thread -all 显示所有匹配的线程
thread 16 查看线程16的栈信息
thread -b 查询 synchronized 关键字阻塞住的线程
thread -i 1000 统计最近1000ms内的线程cpu时间
thread -i 1000 -n 3 列出1000ms内最忙的3个线程
thread -- state WAITING 列出 等待状态的所有线程
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ognl-表达式" tabindex="-1"><a class="header-anchor" href="#ognl-表达式"><span>ognl 表达式</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>// 执行静态变量的方法或者静态方法
sc -d cn.opentp.Demo 查看类加载器  

ognl &#39;@java.lang.System@out.println(&quot;hello&quot;)&#39;

// -c 指定classloader, 使用 classloader命令可以找到类加载器 HashCode
ognl -c 7f9a81e8 @org.springframework.boot.SpringApplication@logger

// 另一种指定类加载器的方式
$ ognl --classLoaderClass \\
org.springframework.boot.loader.LaunchedURLClassLoader \\
@org.springframework.boot.SpringApplication@logger

// 其他复杂的 ognl 表达式
$ ognl &#39;#value1=@System@getProperty(&quot;java.home&quot;), #value2=@System@getProperty(&quot;java.runtime.name&quot;), {#value1, #value2}&#39;
// 返回值：
 @ArrayList[
    @String[/opt/java/8.0.181-zulu/jre],
    @String[OpenJDK Runtime Environment],
]


ognl &#39;#bean = @cn.opentp.config.SpringContextConfig@getBean(&quot;demoImpl&quot;), #req = new cn.opentp.Req(), #req.setParam(&quot;a&quot;), #res = #bean.query(#req) &#39; -c 5a2f016d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="watch" tabindex="-1"><a class="header-anchor" href="#watch"><span>watch</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>watch com.bj58.teg.ep.okrplus.contract.IOkrOperationService okrSetting -b &quot;{params,returnObj}&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="vmtool-执行方法" tabindex="-1"><a class="header-anchor" href="#vmtool-执行方法"><span>vmtool 执行方法</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>vmtool --action getInstances --classLoaderClass org.springframework.boot.loader.LaunchedURLClassLoader \\
    --className cn.opentp.DemoService \\
    --express &#39;#val=new cn.opentp.Req(),#val.setParam(&quot;a&quot;), instances[0].okrSetting(#val)&#39; -x 3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="options-全局配置开关" tabindex="-1"><a class="header-anchor" href="#options-全局配置开关"><span>options 全局配置开关</span></a></h3><p>options + tab 显示所有的选项，常用的有json-format 等</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>option json-format true 支持json化的输出
option save-result true 打开后所有命令的运行结果都保存到 result.log 中
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="retransform" tabindex="-1"><a class="header-anchor" href="#retransform"><span>retransform</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>// 使用示例：
// 1.jad 反编译 UserController
jad --source-only com.example.demo.arthas.user.UserController &gt; /tmp/UserController.java

// 2.查询 classloader hashcode
//sc -d *UserController | grep classLoaderHash

// 3.编辑 /tmp/UserController.java 文件

// 4.mc 编译加载文件
mc --classLoaderClass org.springframework.boot.loader.LaunchedURLClassLoader /tmp/UserController.java -d /tmp
// 或者
mc -c classloaderHash /tmp/UserController.java -d /tmp

// 5.retransform 重新加载 class
retransform /tmp/com/example/demo/arthas/user/UserController.class

// 再使用就是最新的代码了
// ps 使用限制 1.不允许新增加 field/method， 2.正在跑的函数，没有退出不能生效。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="命令列表" tabindex="-1"><a class="header-anchor" href="#命令列表"><span>命令列表</span></a></h3><h4 id="基础" tabindex="-1"><a class="header-anchor" href="#基础"><span>基础</span></a></h4><table><thead><tr><th>命令</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>cls</td><td>清屏</td><td></td></tr><tr><td>session</td><td>现实会话信息，pid、session_id</td><td></td></tr><tr><td>help</td><td></td><td></td></tr><tr><td>reset</td><td>重置所有的增强代码</td><td></td></tr><tr><td>version</td><td>arthas 版本</td><td></td></tr><tr><td>history</td><td>历史命令</td><td></td></tr><tr><td>exit/quit, stop</td><td>退出，stop关闭服务</td><td></td></tr><tr><td>keymap</td><td>快捷键列表</td><td></td></tr><tr><td>cat</td><td>同 linux cat</td><td></td></tr><tr><td>echo</td><td>同 linux echo</td><td></td></tr><tr><td>grep</td><td>同 linux grep</td><td>sysenv｜grep java</td></tr><tr><td>tee</td><td>同 linux tee</td><td>sysprop｜tee /tmp/log</td></tr><tr><td>pwd</td><td>同 linux pwd</td><td></td></tr><tr><td>plaintext</td><td>将输出去掉ANSI颜色</td><td>jad demo.Class method｜plaintext</td></tr><tr><td>wc</td><td>显示行号</td><td>jad demo.Class method｜wc -l</td></tr><tr><td>options</td><td>全局开关</td><td>见上方详细说明</td></tr></tbody></table><h4 id="系统命令" tabindex="-1"><a class="header-anchor" href="#系统命令"><span>系统命令</span></a></h4><table><thead><tr><th>命令</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>dashbord</td><td>实时数据面板</td><td>见上方详细说明</td></tr><tr><td>thread</td><td>查看线程使用情况</td><td>见上方详细说明</td></tr><tr><td>jvm</td><td>查看当前 JVM 信息</td><td>jvm ｜ grep PATH</td></tr><tr><td>sysprop</td><td>查看当前 JVM 的系统属性</td><td></td></tr><tr><td>sysenv</td><td>查看当前JVM的环境变量</td><td></td></tr><tr><td>vmoption</td><td>JVM配置参数</td><td>vmoption列出所有参数，【vmoption 参数 true/false】 修改参数</td></tr><tr><td>vmtool</td><td>获取内存中的对象执行，或者强制GC</td><td>见上方详细信息</td></tr><tr><td>perfcounter</td><td>查看当前jvm的 pref counter 信息</td><td>perfcounter -d</td></tr><tr><td>logger</td><td>查看程序日志配置信息</td><td>logger</td></tr><tr><td>getstatic</td><td>查看类的静态熟悉，建设使用 ognl 命令</td><td>getstatic class field_name</td></tr><tr><td>ognl</td><td>执行ognl表达式</td><td>见上方详细使用说明</td></tr><tr><td>mbean</td><td>查看 managed bean 信息（JMX）</td><td>mbean -i 1000 -n 50 java.lang:type=Threading *Count</td></tr><tr><td>heapdump</td><td>约等于 jmap heap dump</td><td>heapdump --live /tmp/dump.hprof</td></tr><tr><td>memory</td><td>查看jvm 内存信息</td><td></td></tr></tbody></table><h4 id="类命令" tabindex="-1"><a class="header-anchor" href="#类命令"><span>类命令</span></a></h4><table><thead><tr><th>命令</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>sc</td><td>查看 JVM 已加载的类信息</td><td>模糊sc demo.* 具体 sc demo.MathGame [-e 正则] [-f field]</td></tr><tr><td>sm</td><td>查看已加载类的方法信息</td><td>sm java.lang.String 、 sm -d java.lang.String toString</td></tr><tr><td>jad</td><td>反编译指定已加载类的源码</td><td>jad --source-only demo.MathGame、jad demo.MathGame main, [c、classloader]</td></tr><tr><td>mc-retransform</td><td>热更新class文件</td><td>见上方详细使用说明</td></tr><tr><td>mc-redefine</td><td>热更新class文件，推荐使用 retransform, retransform可撤销，redefine则不行</td><td></td></tr><tr><td>dump</td><td>dump 已加载类的 bytecode 到特定目录</td><td>dump -d /tmp/output java.lang.String</td></tr><tr><td>classloader</td><td>查看 classloader 的继承树，urls，类加载信息</td><td>classloadr、classloader -l、 classloader -c xxxx --load demo.MathGame</td></tr></tbody></table><h4 id="增强命令" tabindex="-1"><a class="header-anchor" href="#增强命令"><span>增强命令</span></a></h4><table><thead><tr><th>命令</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>monitor</td><td>方法执行监控</td><td>monitor -b -c 5 com.test.testes.MathGame primeFactors &quot;params[0] &lt;= 2&quot;</td></tr><tr><td>watch</td><td>函数执行数据观测</td><td>见上方详细使用说明</td></tr><tr><td>trace</td><td>方法内部调用路径，并输出方法路径上的每个节点上耗时</td><td>trace demo.MathGame run &#39;#cost &gt; 10&#39;</td></tr><tr><td>stack</td><td>输出当前方法被调用的调用路径</td><td>stack demo.MathGame primeFactors &#39;#cost&gt;5&#39;</td></tr><tr><td>tt</td><td>方法执行数据的时空隧道，记录下指定方法每次调用的入参和返回信息，并能对这些不同的时间下调用进行观测</td><td>tt -t demo.MathGame primeFactors、tt -t xTest print &#39;params[1] instanceof Integer&#39;</td></tr><tr><td>profiler</td><td>生成火焰图</td><td>profiler start、 profiler stop --format html、 查看地址：http://localhost:3658/arthas-output/</td></tr><tr><td>jfr</td><td>用于收集有关正在运行的 Java 应用程序的诊断和分析数据的工具</td><td>jfr start -n myRecording --duration 60s -f /tmp/myRecording.jfr、 jfr stop -r 1</td></tr></tbody></table>`,31),s=[n];function l(i,o){return e(),d("div",null,s)}const h=t(r,[["render",l],["__file","Arthas.html.vue"]]),p=JSON.parse('{"path":"/blog/middleware/Arthas.html","title":"arthas","lang":"zh-CN","frontmatter":{"title":"arthas","category":["中间件"],"order":1,"tag":["arthas"],"description":"arthas arthas 最有用的就是 bashboard 查看系统情况 trace 查看接口耗时情况 orgnl & vmtool 线上执行方法调查线上问题。 dashboard 实时数据面板 查询GC等情况 ID java 级别的线程ID，跟jstack中的nativeID不是对应的 NAME 线程名 GROUP 线程组名 PRIORITY 优先...","head":[["meta",{"property":"og:url","content":"https://opentp.cn/blog/middleware/Arthas.html"}],["meta",{"property":"og:site_name","content":"opentp"}],["meta",{"property":"og:title","content":"arthas"}],["meta",{"property":"og:description","content":"arthas arthas 最有用的就是 bashboard 查看系统情况 trace 查看接口耗时情况 orgnl & vmtool 线上执行方法调查线上问题。 dashboard 实时数据面板 查询GC等情况 ID java 级别的线程ID，跟jstack中的nativeID不是对应的 NAME 线程名 GROUP 线程组名 PRIORITY 优先..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"zhanggong"}],["meta",{"property":"article:tag","content":"arthas"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"arthas\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"zhanggong\\",\\"url\\":\\"opentp.cn\\"}]}"]]},"headers":[{"level":2,"title":"arthas","slug":"arthas","link":"#arthas","children":[{"level":3,"title":"dashboard 实时数据面板","slug":"dashboard-实时数据面板","link":"#dashboard-实时数据面板","children":[]},{"level":3,"title":"thread 查看线程使用情况","slug":"thread-查看线程使用情况","link":"#thread-查看线程使用情况","children":[]},{"level":3,"title":"ognl 表达式","slug":"ognl-表达式","link":"#ognl-表达式","children":[]},{"level":3,"title":"watch","slug":"watch","link":"#watch","children":[]},{"level":3,"title":"vmtool 执行方法","slug":"vmtool-执行方法","link":"#vmtool-执行方法","children":[]},{"level":3,"title":"options 全局配置开关","slug":"options-全局配置开关","link":"#options-全局配置开关","children":[]},{"level":3,"title":"retransform","slug":"retransform","link":"#retransform","children":[]},{"level":3,"title":"命令列表","slug":"命令列表","link":"#命令列表","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":4.48,"words":1344},"filePathRelative":"blog/middleware/Arthas.md","autoDesc":true}');export{h as comp,p as data};
